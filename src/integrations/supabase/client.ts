
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from '@/types/supabase';

const SUPABASE_URL = "https://usxnzaqxdrphdfccrgew.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVzeG56YXF4ZHJwaGRmY2NyZ2V3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDYwMzcxMzUsImV4cCI6MjA2MTYxMzEzNX0.f68vbNTLIabVa0t_2Gbvzi5fp643aypHZ4I5TW0Qz1M";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storage: localStorage,
  }
});

// Initialize storage buckets - creating the listings bucket if it doesn't exist
(async () => {
  try {
    // Try to create the listings bucket if it doesn't exist
    try {
      const { data: bucketData, error: bucketError } = await supabase.storage.createBucket('listings', {
        public: true,
        fileSizeLimit: 10485760, // 10MB limit
        allowedMimeTypes: ['image/png', 'image/jpeg', 'image/jpg', 'image/gif', 'image/webp']
      });
      
      if (bucketError && bucketError.message !== 'Bucket already exists') {
        console.warn('Error creating listings bucket:', bucketError);
      } else if (bucketData) {
        console.log('Listings bucket created successfully:', bucketData);
      }
    } catch (createError) {
      console.warn('Error while trying to create listings bucket:', createError);
    }
    
    // Check if we can access the storage
    const { data, error } = await supabase.storage.getBucket('listings');
    if (error) {
      console.warn('Listings bucket might not exist or is inaccessible:', error);
    } else {
      console.log('Listings bucket accessible:', data);
    }
  } catch (error) {
    console.error('Failed to initialize storage buckets:', error);
  }
})();
